<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <Import Condition="Exists('$(NuGetPackageRoot)net4x.nugetutility/$(NuGetUtilityVersion)/build/NuGet.Utility.props')" Project="$(NuGetPackageRoot)net4x.nugetutility/$(NuGetUtilityVersion)/build/NuGet.Utility.props" />
    <PropertyGroup>
        <PackageOutputPath>$(SolutionDir)Packages/</PackageOutputPath>
        <Version>$(VersionPrefix).$(VersionSuffix)</Version>
        <LangVersion>latest</LangVersion>
        <TargetFramework>netstandard2.0</TargetFramework>
        <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
        <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
        <PackageId>Net4x.AppDomainAlternative</PackageId>
        <SignAssembly>True</SignAssembly>
        <AssemblyOriginatorKeyFile>..\..\AppDomainAlternative.snk</AssemblyOriginatorKeyFile>
        <IsPackable>true</IsPackable>
        <PackageId>Net4x.AppDomainAlternative</PackageId>
        <PackageVersion>$(Version)</PackageVersion>
        <Title>An AppDomain alternative for .Net Core</Title>
        <Authors>Cy A Scott</Authors>
        <PackageProjectUrl>https://github.com/CyAScott/AppDomainAlternative</PackageProjectUrl>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageTags>Core AppDomain</PackageTags>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <DontConvert>False</DontConvert>
    </PropertyGroup>
    <ItemGroup>
        <InternalsVisibleTo Include="AppDomainAlternative.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100518ef14d1a0c9efc88ac39397509c94a703ec7a674ed0414a18d3bad86b3618863d9d20204b50c28a13c56df0493d2943f2013a9b4f2bd5a829217698fa2444fbbebd449d6a8942a1278c87fe9ccba10535b9b2b1f47295168308a2b2a85af1fc655f8c736b51fe1d457d1b7be6c807516f58d5d981b112929c5c24f3ff1c0ce" />
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <Content Include="$(SolutionDir)\VsDebugger\bin\Debug\*.*">
            <CopyToOutput>true</CopyToOutput>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <Content Include="$(SolutionDir)\VsDebugger\bin\Release\*.*">
            <Pack>true</Pack>
            <PackagePath>lib\netstandard2.0</PackagePath>
            <CopyToOutput>true</CopyToOutput>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\EnvDTE.dll" />
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\EnvDTE80.dll" />
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\stdole.dll" />
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\VsDebugger.exe" />
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\VsDebugger.exe.config" />
        <Content Remove="$(SolutionDir)\VsDebugger\bin\Release\VsDebugger.pdb" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Net4x.NuGetUtility" PrivateAssets="All" Version="$(NuGetUtilityVersion)" />
        <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
    </ItemGroup>
    <Import Condition="Exists('$(NuGetPackageRoot)net4x.nugetutility/$(NuGetUtilityVersion)/build/NuGet.Utility.targets')" Project="$(NuGetPackageRoot)net4x.nugetutility/$(NuGetUtilityVersion)/build/NuGet.Utility.targets" />
</Project>